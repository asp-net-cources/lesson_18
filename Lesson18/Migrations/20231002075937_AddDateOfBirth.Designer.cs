// <auto-generated />
using System;
using Lesson18.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lesson18.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    [Migration("20231002075937_AddDateOfBirth")]
    partial class AddDateOfBirth
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Lesson18.Data.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Lesson18.Data.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Lesson18.Data.Models.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("RoleStr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("831627e6-e6ed-4754-b8f6-91be5cd221ec"),
                            DateOfBirth = new DateTime(2003, 10, 2, 11, 59, 36, 976, DateTimeKind.Local).AddTicks(7750),
                            FirstName = "Админ",
                            LastName = "Главный",
                            Login = "admin",
                            Password = "Admin12+",
                            RoleStr = "Admin"
                        },
                        new
                        {
                            Id = new Guid("cda15a3f-38ea-4049-8d99-091ae31cc783"),
                            DateOfBirth = new DateTime(2003, 10, 2, 11, 59, 36, 976, DateTimeKind.Local).AddTicks(7800),
                            FirstName = "Пользователь",
                            LastName = "Обычный",
                            Login = "user",
                            Password = "User12+",
                            RoleStr = "Common"
                        },
                        new
                        {
                            Id = new Guid("36c24de2-e210-4da6-8e2e-e3c1683110cf"),
                            DateOfBirth = new DateTime(2013, 10, 2, 11, 59, 36, 976, DateTimeKind.Local).AddTicks(7810),
                            FirstName = "Пользователь",
                            LastName = "Молодой",
                            Login = "user-junior",
                            Password = "User12+",
                            RoleStr = "Common"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
